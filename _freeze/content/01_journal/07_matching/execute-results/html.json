{
  "hash": "93ab05f989eaa81a9eae08663d8c3263",
  "result": {
    "markdown": "---\ntitle: \"Matching and Subclassification\"\n---\n\n\n-   Check the relationships between the variables and draw a DAG as you understand the relations.\n\n\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-2_4e7e9584bb444b978cf7e8ded36f0b4c'}\n\n```{.r .cell-code}\n#Check Correlation\ndf <- readRDS(\"~/GitHub/cdsba-msandipan/Causal_Data_Science_Data/membership.rds\")\ndf %>%\n     cor() %>% \n     round(2) %>% \n     Matrix::tril()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> 5 x 5 Matrix of class \"dtrMatrix\"\n#>                age  sex pre_avg_purch card avg_purch\n#> age           1.00    .             .    .         .\n#> sex           0.01 1.00             .    .         .\n#> pre_avg_purch 0.52 0.00          1.00    .         .\n#> card          0.11 0.01          0.19 1.00         .\n#> avg_purch     0.45 0.00          0.86 0.38      1.00\n```\n:::\n\n```{.r .cell-code}\n#DAG Graph\ndag_model <- dagify(avg_purch~card,\n                    pre_avg_purch~age, \n                    card~age,\n                    card~pre_avg_purch,\n                    avg_purch~age,\n                    avg_purch~pre_avg_purch,\n                    labels = c(\n                    \"card\" = \"Card\",\n                    \"avg_purch\" = \"Avg_purch\",\n                    \"age\"=\"age\",\n                    \"pre_avg_purch\" = \"Pre_Avg_purch\",\n                    \"sex\"=\"sex\"),\n                    exposure = \"card\",\n                    outcome = \"avg_purch\")\nggdag(dag_model, text = FALSE, use_labels = \"label\")\n```\n\n::: {.cell-output-display}\n![](07_matching_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n-   Compute a naive estimate of the average treatment effect.\n\n\n::: {.cell hash='07_matching_cache/html/unnamed-chunk-3_72443e6f0f3a36a92599579fd8c0c059'}\n\n```{.r .cell-code}\nlm_naive<-lm(avg_purch~card,data=df)\nsummary(lm_naive)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = avg_purch ~ card, data = df)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -101.515  -20.684   -0.199   20.424  120.166 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  65.9397     0.3965  166.29   <2e-16 ***\n#> card         25.2195     0.6095   41.38   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 30.11 on 9998 degrees of freedom\n#> Multiple R-squared:  0.1462,\tAdjusted R-squared:  0.1461 \n#> F-statistic:  1712 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n-   Use the following matching methods to obtain more precise estimates:\n\n    -   (Coarsened) Exact Matching.\n\n\n    ::: {.cell hash='07_matching_cache/html/unnamed-chunk-4_510f0579ea0112ecb77b7f17cfbe8226'}\n    \n    ```{.r .cell-code}\n    cem = matchit(card~age+pre_avg_purch,\n                  data=df,\n                  method='cem',\n                  estimant='ATE')\n    df_cem<-match.data(cem)\n    lm_cem<-lm(avg_purch~card,data=df_cem,weights=weights)\n    summary(lm_cem)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    #> \n    #> Call:\n    #> lm(formula = avg_purch ~ card, data = df_cem, weights = weights)\n    #> \n    #> Weighted Residuals:\n    #>      Min       1Q   Median       3Q      Max \n    #> -101.152  -24.162   -5.557   15.382  189.466 \n    #> \n    #> Coefficients:\n    #>             Estimate Std. Error t value Pr(>|t|)    \n    #> (Intercept)  75.5246     0.3952   191.1   <2e-16 ***\n    #> card         15.2711     0.6084    25.1   <2e-16 ***\n    #> ---\n    #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n    #> \n    #> Residual standard error: 29.97 on 9949 degrees of freedom\n    #> Multiple R-squared:  0.05955,\tAdjusted R-squared:  0.05946 \n    #> F-statistic:   630 on 1 and 9949 DF,  p-value: < 2.2e-16\n    ```\n    :::\n    :::\n\n\n    -   Nearest-Neighbor Matching\n\n\n    ::: {.cell hash='07_matching_cache/html/unnamed-chunk-5_6aff3aaca2df534b46e5e8170d23da44'}\n    \n    ```{.r .cell-code}\n    nn = matchit(card~age+pre_avg_purch,\n                  data=df,\n                  method=\"nearest\",\n                  distance = \"mahalanobis\",\n                  replace = T )\n    df_nn<-match.data(nn)\n    lm_nn<-lm(avg_purch~card,data=df_nn,weights=weights)\n    summary(lm_nn)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    #> \n    #> Call:\n    #> lm(formula = avg_purch ~ card, data = df_nn, weights = weights)\n    #> \n    #> Weighted Residuals:\n    #>      Min       1Q   Median       3Q      Max \n    #> -101.515  -21.159   -1.517   18.610  181.319 \n    #> \n    #> Coefficients:\n    #>             Estimate Std. Error t value Pr(>|t|)    \n    #> (Intercept)  76.2067     0.5844  130.40   <2e-16 ***\n    #> card         14.9524     0.7479   19.99   <2e-16 ***\n    #> ---\n    #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n    #> \n    #> Residual standard error: 30.37 on 6930 degrees of freedom\n    #> Multiple R-squared:  0.05453,\tAdjusted R-squared:  0.05439 \n    #> F-statistic: 399.7 on 1 and 6930 DF,  p-value: < 2.2e-16\n    ```\n    :::\n    :::\n\n\n    -   Inverse Probability Weighting.\n\n\n    ::: {.cell hash='07_matching_cache/html/unnamed-chunk-6_e5141186797e9a0948afe509569fcfc6'}\n    \n    ```{.r .cell-code}\n    model_prop = glm(card~age+pre_avg_purch,\n                  data=df,\n                  family = binomial(link = \"logit\") )\n    df_aug <- df %>% mutate(propensity = predict(model_prop, type = \"response\"))\n    df_ipw <- df_aug %>% mutate(\n      ipw = (card/propensity) + ((1-card) / (1-propensity)))\n    lm_ipw<-lm(avg_purch~card,data=df_ipw,weights=ipw)\n    summary(lm_ipw)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    ```\n    #> \n    #> Call:\n    #> lm(formula = avg_purch ~ card, data = df_ipw, weights = ipw)\n    #> \n    #> Weighted Residuals:\n    #>      Min       1Q   Median       3Q      Max \n    #> -203.886  -29.009   -0.273   28.782  215.682 \n    #> \n    #> Coefficients:\n    #>             Estimate Std. Error t value Pr(>|t|)    \n    #> (Intercept)  70.2627     0.4320  162.65   <2e-16 ***\n    #> card         14.9548     0.6109   24.48   <2e-16 ***\n    #> ---\n    #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n    #> \n    #> Residual standard error: 43.2 on 9998 degrees of freedom\n    #> Multiple R-squared:  0.05654,\tAdjusted R-squared:  0.05645 \n    #> F-statistic: 599.2 on 1 and 9998 DF,  p-value: < 2.2e-16\n    ```\n    :::\n    :::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}