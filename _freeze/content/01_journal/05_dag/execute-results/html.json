{
  "hash": "c20785a822584b14fbf98f7697e4a1fb",
  "result": {
    "markdown": "---\ntitle: \"Directed Acyclic Graphs\"\n---\n\n\n::: callout-note\nYou can delete everything in here and start fresh.\n:::\n\n* Think about example from previous chapter (parking spots) and draw the DAG.\n\nWe take the variables as follows\n* X is the Parking spots\n* Y is the Sales\n* Z is the Location\n\nWe make the folloing assumption for the dependancies,\n* X and Z: Dependant, Location affects the size of the parking spots\n* Z and Y: Dependant, Location affects the Sales\n* X and Y, conditional on Z: Dependant as the size of the parking lot affects\nsales in a fixed location\n\n::: {.cell hash='05_dag_cache/html/unnamed-chunk-1_f18714223dc95b372de3ee1267eaedfb'}\n\n```{.r .cell-code}\nlibrary(dagitty)\nlibrary(ggdag)\nlibrary(ggplot2)\nlibrary(tidyverse)\nlibrary(dplyr)\n```\n:::\n\n::: {.cell hash='05_dag_cache/html/unnamed-chunk-2_3de7785f79d79a1b8175f6d4942ad246'}\n\n```{.r .cell-code}\n# Chain\nchain <- dagify(\n    X ~ Z,\n    Y ~ Z,\n    Y ~ X,\n    coords = list(x = c(Y = 3, Z = 2, X = 1),\n                  y = c(Y = 0, Z = 1, X = 0)),\n    labels = list(X = \"Parking Spots\",\n                Y = \"Sales\", \n                Z = \"Location\")\n)\n\n# Plot DAG\nggdag(chain) +\n    geom_dag_point(color = \"red\") +\n    geom_dag_text(color = \"white\") +\n    geom_dag_edges(edge_color = \"black\")+\n    geom_dag_label_repel(aes(label = label))\n```\n\n::: {.cell-output-display}\n![](05_dag_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n* In the data, you find three variables: satisfaction, follow_ups and subscription. Perform the     following steps:\n\n  + regress satisfaction on follow_ups\n\n  + regress satisfaction on follow_ups and account for subscription\n  \n\n::: {.cell hash='05_dag_cache/html/unnamed-chunk-3_20d92b4a054d7c358a026c6d3fb0acd5'}\n\n```{.r .cell-code}\ndf <- readRDS(\"C:/Users/Sandipan Mukherjee/Documents/GitHub/cdsba-msandipan/Causal_Data_Science_Data/customer_sat.rds\")\n\n# Not Conditioned\nlm_1<-lm(satisfaction ~ follow_ups,data=df)\n\n#Plot\nlm_not_cond <- ggplot(df, aes(x = follow_ups, y = satisfaction ))+\n  geom_point()+\n  stat_smooth(method = \"lm\", se = F)\n\n\n#Conditioned\nlm_2<-lm(satisfaction ~ follow_ups,data=df[df$subscription == \"Elite\", ])\nlm_3<-lm(satisfaction ~ follow_ups,data=df[df$subscription == \"Premium\", ])\nlm_4<-lm(satisfaction ~ follow_ups,data=df[df$subscription == \"Premium+\", ])\n#Plot\nlm_cond <- ggplot(df, aes(x = follow_ups, y = satisfaction,color= subscription ))+ geom_point()+stat_smooth(method = \"lm\", se = F)\n\n#Printing\nprint(\"Not conditioned coefficients:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Not conditioned coefficients:\"\n```\n:::\n\n```{.r .cell-code}\nlm_1$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> (Intercept)  follow_ups \n#>   78.886047   -3.309302\n```\n:::\n\n```{.r .cell-code}\nprint(\"Conditioned coefficients accounting for Elite:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Conditioned coefficients accounting for Elite:\"\n```\n:::\n\n```{.r .cell-code}\nlm_2$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> (Intercept)  follow_ups \n#>   31.307692    1.653846\n```\n:::\n\n```{.r .cell-code}\nprint(\"Conditioned coefficients accounting for Premium:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Conditioned coefficients accounting for Premium:\"\n```\n:::\n\n```{.r .cell-code}\nlm_3$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> (Intercept)  follow_ups \n#>   70.076923    3.076923\n```\n:::\n\n```{.r .cell-code}\nprint(\"Conditioned coefficients accounting for Premium+:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Conditioned coefficients accounting for Premium+:\"\n```\n:::\n\n```{.r .cell-code}\nlm_4$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> (Intercept)  follow_ups \n#>       47.95        1.75\n```\n:::\n\n```{.r .cell-code}\nlm_not_cond\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](05_dag_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nlm_cond\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](05_dag_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}